@page "/view_activity_record/{id:int}"
@using BminingBlazor.ViewModels.ActivityRecord
@using BminingBlazor.ViewModels.User
@using Models.ActivityRecord

@inject IMatDialogService MatDialogService
@inject IUserDataService UserDataService
@inject IActivityRecordService ActivityRecordService
@inject NavigationManager NavigationManager
@inject Microsoft.JSInterop.IJSRuntime JS


<div class="bmining-app">
    <h2>@Resource.ViewActivityRecord</h2>
    <div class="main-break">
        <div class="main-circle"></div>
    </div>

    @if (ViewModel != null)
    {
        <div>
            <div class="col">
                <div class="d-flex flex-row w-100 justify-content-between">
                    <div class="float-left">
                        <h5 class="font-weight-bold">@ViewModel.MyProjectCode</h5>
                    </div>
                    <div class="float-right">
                        <h5 class="font-weight-bold">@ViewModel.MyProjectName</h5>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="title">@Resource.Title</label>
                <h4 class="form-control" id="title">
                    @ViewModel.MyTitle
                </h4>
            </div>

            <div class="form-group">
                <label for="date">@Resource.Date</label>
                <h4 class="form-control" id="date">
                    @ViewModel.MyDate.ToShortDateString()
                </h4>
            </div>

            <div class="form-group">
                <label for="duration">@Resource.DurationHours</label>
                <h4 class="form-control" id="duration">
                    @ViewModel.MyDurationHours
                </h4>
            </div>

            <div class="form-group">
                <label for="place">@Resource.Place</label>
                <h4 class="form-control" id="place">
                    @ViewModel.MyPlace
                </h4>
            </div>

            <h4>@Resource.Members</h4>
            @if (ViewModel.OurMembers.Any())
            {
                <table>
                    <tr>
                        <th>@Resource.Name</th>
                        <th>@Resource.Email</th>
                        <th>@Resource.Enterprise</th>
                    </tr>

                    @foreach (var activityRecordMember in ViewModel.OurMembers)
                    {
                        <tr>
                            <td>
                                @($"{activityRecordMember.MyName} {activityRecordMember.MySurname}")
                            </td>
                            <td>
                                @activityRecordMember.MyEmail
                            </td>
                            <td>
                                @activityRecordMember.MyEnterprise
                            </td>
                        </tr>
                    }
                </table>
            }

            <h4>@Resource.Commitments</h4>

            @if (ViewModel.OurCommitments.Any())
            {
                <div>
                    <table>
                        <tr>
                            <th>@Resource.Responsible</th>
                            <th>@Resource.EndDate</th>
                            <th>@Resource.Commitment</th>
                            <th>@Resource.Status</th>
                        </tr>

                        @foreach (var activityRecordCommitment in ViewModel.OurCommitments)
                        {
                            <tr>
                                <td>
                                    @($"{activityRecordCommitment.MyResponsible}")
                                </td>
                                <td>
                                    @($"{activityRecordCommitment.MyCommitmentDate.ToShortDateString()}")
                                </td>
                                <td>
                                    @($"{activityRecordCommitment.MyCommitment}")
                                </td>
                                <td>
                                    @switch (activityRecordCommitment.MyStatus)
                                    {
                                        case ActivityRecordStatusEnum.Initiated:
                                            @Resource.Initiated
                                            break;
                                        case ActivityRecordStatusEnum.Finalized:
                                            @Resource.Finished
                                            break;
                                        case ActivityRecordStatusEnum.Unknown:
                                            @Resource.Unknown
                                            break;
                                        case ActivityRecordStatusEnum.Eliminated:
                                            @Resource.Eliminated
                                            break;
                                        case ActivityRecordStatusEnum.NotInitiated:
                                            @Resource.NotInitiated
                                            break;
                                    }
                                </td>
                            </tr>
                        }
                    </table>

                </div>
            }

            <h4>@Resource.SecurityReflection</h4>
            <BlazoredTextEditor @ref="@_quillSecurityReflectionHtml" Placeholder="" ReadOnly="true">
                <ToolbarContent>
                    <select class="ql-header">
                        <option selected=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>
                    </select>
                    <span class="ql-formats">
                        <button class="ql-bold"></button>
                        <button class="ql-italic"></button>
                        <button class="ql-underline"></button>
                        <button class="ql-strike"></button>
                    </span>
                    <span class="ql-formats">
                        <select class="ql-color"></select>
                        <select class="ql-background"></select>
                    </span>
                    <span class="ql-formats">
                        <button class="ql-list" value="ordered"></button>
                        <button class="ql-list" value="bullet"></button>
                    </span>
                    <span class="ql-formats">
                        <button class="ql-link"></button>
                    </span>
                </ToolbarContent>
                <EditorContent>
                </EditorContent>
            </BlazoredTextEditor>

            <h4>@Resource.Notes</h4>
            <BlazoredTextEditor @ref="@_quillNotesHtml" Placeholder="" ReadOnly="true">
                <ToolbarContent>
                    <select class="ql-header">
                        <option selected=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>
                    </select>
                    <span class="ql-formats">
                        <button class="ql-bold"></button>
                        <button class="ql-italic"></button>
                        <button class="ql-underline"></button>
                        <button class="ql-strike"></button>
                    </span>
                    <span class="ql-formats">
                        <select class="ql-color"></select>
                        <select class="ql-background"></select>
                    </span>
                    <span class="ql-formats">
                        <button class="ql-list" value="ordered"></button>
                        <button class="ql-list" value="bullet"></button>
                    </span>
                    <span class="ql-formats">
                        <button class="ql-link"></button>
                    </span>
                </ToolbarContent>
                <EditorContent>
                </EditorContent>
            </BlazoredTextEditor>
        </div>
        
    }
    else
    {
        <MatProgressBar Indeterminate="true"></MatProgressBar>
    }
</div>
@code {
    [Parameter]
    public int Id { get; set; }

    public ActivityRecordViewModel ViewModel { get; set; }
    private readonly List<UserViewModel> _users = new List<UserViewModel>();

    private BlazoredTextEditor _quillSecurityReflectionHtml;
    private BlazoredTextEditor _quillNotesHtml;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            _users.AddRange(await UserDataService.ReadUsers());
            ViewModel = await ActivityRecordService.GetActivityRecord(Id);
            StateHasChanged();
            await Task.Delay(1000); // Delay for Quill
            await _quillNotesHtml.LoadHTMLContent(ViewModel.MyNotes);
            await _quillSecurityReflectionHtml.LoadHTMLContent(ViewModel.MySecurityReflection);

        }
    }

    
}
