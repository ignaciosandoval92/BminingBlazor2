@page "/EditHours/{userId:int}/{startDate:datetime}/{endDate:datetime}"
@using BminingBlazor.ViewModels.ActivityRecord
@using Models.ActivityRecord
@using BminingBlazor.ViewModels.Projects
@using BminingBlazor.ViewModels.TrackingHours
@inject IMatDialogService MatDialogService
@inject ITimeTrackingService TimeTrackingService
@inject NavigationManager NavigationManager
<div class="bmining-app">

    <h3>@Resource.Edit</h3>
    <div class="main-break">
        <div class="main-circle"></div>
    </div>
    <h6 class="header-break">@Resource.OrdinaryHours</h6>
    <div class="alternate2-break"></div>
    <table>
        <thead>
            <tr>
                <th>@Resource.Project</th>
                <th>Sab</th>
                <th>Dom</th>
                <th>Lun</th>
                <th>Mar</th>
                <th>Mie</th>
                <th>Jue</th>
                <th>Vie</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pro in _projects)
            {
                <tr>
                    <td>@pro.MyProjectCode<br /><txt>@pro.MyProjectName</txt></td>
                    <td><input type="number" @bind="@pro.TrackedHoursSat" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursSun" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursMon" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursTue" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursWed" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursThu" class="form-control" id="inputHours"></td>
                    <td><input type="number" @bind="@pro.TrackedHoursFri" class="form-control" id="inputHours"></td>
                </tr>
            }
        </tbody>
    </table>
    <h6 class="header-break">@Resource.ExtraordinaryHours</h6>
    <div class="alternate2-break"></div>
    <button @onclick="() => SaveHours(_projects)" class="bmining-button ">@Resource.Save</button>
</div>

@code {

    [Parameter]
    public int userId { get; set; }
    [Parameter]
    public DateTime startDate { get; set; }
    [Parameter]
    public DateTime endDate { get; set; }



    public List<double> MyHours;
    public double MyHoursSat { get; set; }
    public double MyHoursSun { get; set; }
    public double MyHoursMon { get; set; }
    public double MyHoursTue { get; set; }
    public double MyHoursWed { get; set; }
    public double MyHoursThu { get; set; }
    public double MyHoursFri { get; set; }
    public ProjectTrackingWeekViewModel _project = new ProjectTrackingWeekViewModel();
    public List<ProjectTrackingWeekViewModel> _projects = new List<ProjectTrackingWeekViewModel>();

    protected override async Task OnInitializedAsync()
    {
        var chargedProjects = await TimeTrackingService.ChargedProjectOrdinary(userId, startDate, endDate);
        foreach (var i in chargedProjects)
        {
            _project = await TimeTrackingService.ReadProjectWeekOrdinary(i.MyProjectId, userId, startDate, endDate);
            _projects.Add(_project);
        }

    }
    public async Task SaveHours(List<ProjectTrackingWeekViewModel> projects)
    {
        foreach (var pro in projects)
        {
            await TimeTrackingService.EditStatusTimeTracking(pro.IdSat, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursSat);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdSun, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursSun);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdMon, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursMon);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdTue, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursTue);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdWed, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursWed);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdThu, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursThu);
            await TimeTrackingService.EditStatusTimeTracking(pro.IdFri, Models.TimeTracking.TimeTrackingStatusEnum.WaitingForApproval, pro.TrackedHoursFri);
        }
        NavigationManager.NavigateTo("/dashboard_tracking_hours", true);
    }

}
