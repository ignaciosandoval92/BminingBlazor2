@page "/ViewMembers/{idproject:int}"
@using Models
@using BminingBlazor.Services
@using Microsoft.AspNetCore.Components
@using System.Data
@using ViewModels.User

@inject IMatDialogService MatDialogService
@inject NavigationManager NavigationManager
@inject IProjectDataService ProjectDataService
@inject IUserDataService UserDataService
@inject AuthenticationStateProvider AuthenticationStateProvider
@*@attribute [Authorize(Roles = "Administracion")]*@

<div class="bmining-app">
    <h2>@Resource.ProjectManager</h2>
    <div class="main-break">
        <div class="main-circle"></div>
    </div>
    @if (_boss == null)
    {
        <MatProgressBar Indeterminate="true" />
    }
    else
    {
        <div class="table-responsive{-sm|-md|-lg|-xl}">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Resource.Email</th>
                        <th>@Resource.Names</th>
                        <th>@Resource.PaternalLastName</th>
                        <th>@Resource.MaternalLastName</th>
                        <th>@Resource.Rut</th>
                    </tr>
                </thead>
                <tbody>

                    <tr>
                        <td>@_boss.MyEmail</td>
                        <td>@_boss.MyName</td>
                        <td>@_boss.MyPaternalSurname</td>
                        <td>@_boss.MyMaternalSurname</td>
                        <td>@_boss.MyRut</td>
                    </tr>

                </tbody>
            </table>
        </div>


        <h4>@Resource.Members</h4>
        <div class="table-responsive{-sm|-md|-lg|-xl}">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Resource.Email</th>
                        <th>@Resource.Names</th>
                        <th>@Resource.PaternalLastName</th>
                        <th>@Resource.MaternalLastName</th>
                        <th>@Resource.Rut</th>
                        <th>@Resource.Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in _members)
                    {
                        <tr>
                            <td>@member.MyEmail</td>
                            <td>@member.MyName</td>
                            <td>@member.MyPaternalSurname</td>
                            <td>@member.MyMaternalSurname</td>
                            <td>@member.MyRut</td>
                            <td>
                                <button class="btn-delete" @onclick="()=>Delete(member.MyCodMember)">
                                    
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <button class="bmining-button float-right" @onclick="@AddMember">@Resource.AddMember</button>
        </div>
    }
</div>
@code {
    [Parameter]
    public int IdProject { get; set; }
    private UserViewModel _boss;
    private List<MemberViewModel> _members;
    protected override async Task OnInitializedAsync()
    {
        var id = await ProjectDataService.ReadIdProjectManager(IdProject);
        _boss = await UserDataService.ReadUser(id);
        _members = await ProjectDataService.ReadMembers(IdProject);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            var id = await ProjectDataService.ReadIdProjectManager(IdProject);
            _boss = await UserDataService.ReadUser(id);
            _members = await ProjectDataService.ReadMembers(IdProject);
        }
    }

    public void AddMember()
    {
        NavigationManager.NavigateTo($"/AddMembers/{IdProject}");
    }
    public async void Delete(int codMember)
    {
        var answer = await MatDialogService.ConfirmAsync(Resource.AreYouSureToDelete);
        if (!answer) return;

        await ProjectDataService.DeleteMember(codMember);
        NavigationManager.NavigateTo($"/viewMembers/{IdProject}", true);

    }
}
